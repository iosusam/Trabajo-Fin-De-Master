package model;
// Generated 03-jun-2018 17:29:10 by Hibernate Tools 5.2.3.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * App generated by hbm2java
 */
@Entity
@Table(name = "app", catalog = "suite")
public class App implements java.io.Serializable {

	private Integer idapp;
	private String nombre;
	private String versionApp;
	private String ubicacionServer;
	private Set<Organizacion> organizacions = new HashSet<Organizacion>(0);
	private Set<Suscriptores> suscriptoreses = new HashSet<Suscriptores>(0);

	public App() {
	}

	public App(String nombre, String versionApp, String ubicacionServer) {
		this.nombre = nombre;
		this.versionApp = versionApp;
		this.ubicacionServer = ubicacionServer;
	}

	public App(String nombre, String versionApp, String ubicacionServer, Set<Organizacion> organizacions,
			Set<Suscriptores> suscriptoreses) {
		this.nombre = nombre;
		this.versionApp = versionApp;
		this.ubicacionServer = ubicacionServer;
		this.organizacions = organizacions;
		this.suscriptoreses = suscriptoreses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "IDApp", unique = true, nullable = false)
	public Integer getIdapp() {
		return this.idapp;
	}

	public void setIdapp(Integer idapp) {
		this.idapp = idapp;
	}

	@Column(name = "Nombre", nullable = false, length = 10)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "VersionApp", nullable = false, length = 10)
	public String getVersionApp() {
		return this.versionApp;
	}

	public void setVersionApp(String versionApp) {
		this.versionApp = versionApp;
	}

	@Column(name = "UbicacionServer", nullable = false, length = 20)
	public String getUbicacionServer() {
		return this.ubicacionServer;
	}

	public void setUbicacionServer(String ubicacionServer) {
		this.ubicacionServer = ubicacionServer;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "containorganizacionapp", catalog = "suite", joinColumns = {
			@JoinColumn(name = "IDApp", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "IDOrganizacion", nullable = false, updatable = false) })
	public Set<Organizacion> getOrganizacions() {
		return this.organizacions;
	}

	public void setOrganizacions(Set<Organizacion> organizacions) {
		this.organizacions = organizacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "app")
	public Set<Suscriptores> getSuscriptoreses() {
		return this.suscriptoreses;
	}

	public void setSuscriptoreses(Set<Suscriptores> suscriptoreses) {
		this.suscriptoreses = suscriptoreses;
	}

}
