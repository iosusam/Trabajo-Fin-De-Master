package model;
// Generated 03-jun-2018 17:29:10 by Hibernate Tools 5.2.3.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Organizacion generated by hbm2java
 */
@Entity
@Table(name = "organizacion", catalog = "suite", uniqueConstraints = @UniqueConstraint(columnNames = "IDParrilla"))
public class Organizacion implements java.io.Serializable {

	private Integer id;
	private Parrilla parrilla;
	private String nombre;
	private String pais;
	private String region;
	private String direccion;
	private int codigoPostal;
	private String ciudad;
	private String telefono;
	private String email;
	private Set<App> apps = new HashSet<App>(0);
	private Set<Infochannels> infochannelses = new HashSet<Infochannels>(0);
	private Set<Suscriptores> suscriptoreses = new HashSet<Suscriptores>(0);
	private Set<Usuarios> usuarioses = new HashSet<Usuarios>(0);

	public Organizacion() {
	}

	public Organizacion(Parrilla parrilla, String nombre, String pais, String region, String direccion,
			int codigoPostal, String ciudad, String telefono, String email) {
		this.parrilla = parrilla;
		this.nombre = nombre;
		this.pais = pais;
		this.region = region;
		this.direccion = direccion;
		this.codigoPostal = codigoPostal;
		this.ciudad = ciudad;
		this.telefono = telefono;
		this.email = email;
	}

	public Organizacion(Parrilla parrilla, String nombre, String pais, String region, String direccion,
			int codigoPostal, String ciudad, String telefono, String email, Set<App> apps,
			Set<Infochannels> infochannelses, Set<Suscriptores> suscriptoreses, Set<Usuarios> usuarioses) {
		this.parrilla = parrilla;
		this.nombre = nombre;
		this.pais = pais;
		this.region = region;
		this.direccion = direccion;
		this.codigoPostal = codigoPostal;
		this.ciudad = ciudad;
		this.telefono = telefono;
		this.email = email;
		this.apps = apps;
		this.infochannelses = infochannelses;
		this.suscriptoreses = suscriptoreses;
		this.usuarioses = usuarioses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDParrilla", unique = true, nullable = false)
	public Parrilla getParrilla() {
		return this.parrilla;
	}

	public void setParrilla(Parrilla parrilla) {
		this.parrilla = parrilla;
	}

	@Column(name = "Nombre", nullable = false, length = 20)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "Pais", nullable = false, length = 20)
	public String getPais() {
		return this.pais;
	}

	public void setPais(String pais) {
		this.pais = pais;
	}

	@Column(name = "Region", nullable = false, length = 20)
	public String getRegion() {
		return this.region;
	}

	public void setRegion(String region) {
		this.region = region;
	}

	@Column(name = "Direccion", nullable = false, length = 20)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "Codigo_Postal", nullable = false)
	public int getCodigoPostal() {
		return this.codigoPostal;
	}

	public void setCodigoPostal(int codigoPostal) {
		this.codigoPostal = codigoPostal;
	}

	@Column(name = "Ciudad", nullable = false, length = 20)
	public String getCiudad() {
		return this.ciudad;
	}

	public void setCiudad(String ciudad) {
		this.ciudad = ciudad;
	}

	@Column(name = "Telefono", nullable = false, length = 15)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@Column(name = "Email", nullable = false, length = 20)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "organizacions")
	public Set<App> getApps() {
		return this.apps;
	}

	public void setApps(Set<App> apps) {
		this.apps = apps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizacion")
	public Set<Infochannels> getInfochannelses() {
		return this.infochannelses;
	}

	public void setInfochannelses(Set<Infochannels> infochannelses) {
		this.infochannelses = infochannelses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizacion")
	public Set<Suscriptores> getSuscriptoreses() {
		return this.suscriptoreses;
	}

	public void setSuscriptoreses(Set<Suscriptores> suscriptoreses) {
		this.suscriptoreses = suscriptoreses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "containorganizacionusuarios", catalog = "suite", joinColumns = {
			@JoinColumn(name = "ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "IdUsuario", nullable = false, updatable = false) })
	public Set<Usuarios> getUsuarioses() {
		return this.usuarioses;
	}

	public void setUsuarioses(Set<Usuarios> usuarioses) {
		this.usuarioses = usuarioses;
	}

}
